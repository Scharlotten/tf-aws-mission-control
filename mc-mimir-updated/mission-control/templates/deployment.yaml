{{- $certmanager := .Capabilities.APIVersions.Has "cert-manager.io/v1" -}}
{{- $disableCertManagerCheck := .Values.disableCertManagerCheck -}}

{{- if not $certmanager -}}
  {{- if not $disableCertManagerCheck -}}
    {{- fail (print "mission-control requires cert-manager to be installed in the cluster") }}
  {{- end -}}
{{- end -}}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "k8ssandra-common.fullname" . }}
  labels: {{ include "k8ssandra-common.labels" . | indent 4 }}
    control-plane: {{ include "k8ssandra-common.fullname" . }}-controller-manager
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "k8ssandra-common.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels: {{- include "k8ssandra-common.labels" . | indent 8 }}
        control-plane: {{ include "k8ssandra-common.fullname" . }}-controller-manager
    spec:
      {{- if .Values.image.imagePullSecret }}
      imagePullSecrets:
        - name: {{ .Values.image.imagePullSecret }}
      {{- end }}
      serviceAccountName: {{ include "k8ssandra-common.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          # args:
          # - --config=/configs/controller_manager_config.yaml
          command:
          - /manager
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: {{ include "k8ssandra-common.flattenedImage" .Values.image }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
            - mountPath: /configs
              name: manager-config
            - mountPath: /tmp/k8s-webhook-server/serving-certs
              name: cert
              readOnly: true
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: ALLOW_OPERATORS_ON_DATABASE_NODES
              value: {{ .Values.allowOperatorsOnDatabaseNodes | quote }}
            - name: IMAGE_TAG
              value: {{ .Values.image.tag | quote }}
            {{- if .Values.global.clusterScoped }}
            - name: MISSIONCONTROL_WATCH_NAMESPACE
              value: ""
            {{- else }}
            - name: MISSIONCONTROL_WATCH_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            {{- end }}
            - name: MC_CONTROL_PLANE
              value: {{ .Values.controlPlane | quote }}
            {{- if .Values.imageConfigs }}
            {{- if .Values.imageConfigs.registryOverride }}
            - name: DEFAULT_REGISTRY
              value: {{ .Values.imageConfigs.registryOverride | quote }}
            {{- end }}
            {{- if .Values.imageConfigs.reaper }}
            - name: REAPER_REPOSITORY
              value: {{ .Values.imageConfigs.reaper.repository | quote }}
            {{- end }}
            {{- if .Values.imageConfigs.medusa }}
            - name: MEDUSA_REPOSITORY
              value: {{ .Values.imageConfigs.medusa.repository | quote }}
            {{- end }}
            {{- if .Values.imageConfigs.dataApi }}
            - name: DATA_API_REPOSITORY
              value: {{ .Values.imageConfigs.dataApi.repository | quote }}
            {{- end }}
            {{- if .Values.image.imagePullSecret }}
            - name: IMAGE_PULL_SECRET
              value: {{ .Values.image.imagePullSecret }}
            {{- end }}
            {{- if .Values.imageConfigs.yq }}
            - name: YQ_IMAGE
              value: {{ .Values.imageConfigs.yq.image | quote }}
            {{- end }}
            {{- if .Values.imageConfigs.cqlsh }}
            - name: CQLSH_REPOSITORY
              value: {{ .Values.imageConfigs.cqlsh.repository | quote }}
            {{- end }}
            {{- end }}
      {{- if .Values.nodeSelector }}
      nodeSelector: {{ toYaml .Values.nodeSelector | nindent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations: {{ toYaml .Values.tolerations | nindent 8 }}
      {{- end }}
      volumes:
        - configMap:
            name: {{ include "k8ssandra-common.fullname" . }}-manager-config
          name: manager-config
        - name: cert
          secret:
            defaultMode: 420
            secretName: {{ include "k8ssandra-common.fullname" . }}-webhook-server-cert
